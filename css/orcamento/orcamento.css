#orcamento {
  background: linear-gradient(var(--cor11) 600px, var(--cor1) 0px);
}

.orcamento {
  display: grid;
  grid-template-columns: 2.5fr 3.5fr;
  padding-top: 120px;
}

.orcamento h2 {
  text-transform: uppercase;
  position: relative;
  display: flex;
  align-items: center;
}

.orcamento h2::before {
  content: "";
  display: inline-block;
  width: 4px;
  height: 8px;
  background-color: var(--p1);
  position: absolute;
  left: -12px;
}

.orcamento-produto,
.orcamento-dados {
  padding: 60px;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

.orcamento-produto {
  border-radius: 5px 0 0 5px;
  background: var(--cor12);
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 20px;
  align-content: start;
}

.orcamento-produto > * {
  grid-column: 1/-1;
}

.orcamento-produto label {
  font: 600 1rem/1.5 "Poppins", sans-serif;
  color: var(--cor4);
  background-color: var(--cor10);
  padding: 12px 16px;
  border-radius: 4px;
  cursor: pointer;
  display: grid;
  grid-template-columns: auto 1fr auto;
  align-items: center;
  border: 1px solid var(--cor10);
}

.orcamento-produto input:checked + label {
  background: var(--cor0);
  color: var(--cor11);
}

.orcamento-produto label::before {
  content: "";
  display: inline-block;
  box-sizing: border-box;
  width: 12px;
  height: 12px;
  border: 1px solid var(--cor6);
  border-radius: 50%;
  margin-right: 8px;
}

.orcamento-produto input:checked + label::before {
  border-color: var(--cor7);
  box-shadow: inset 0 0 0 2px var(--cor0), inset 0 0 0 5px var(--cor7);
}

.orcamento-produto label:hover {
  background-color: var(--cor9);
  border-color: var(--cor9);
}

.orcamento-produto input:focus + label {
  box-shadow: 0 0 0 2px var(--p1);
  border-color: var(--cor12);
}

.orcamento-produto label span {
  display: none;
}

.orcamento-produto input:checked + label span {
  display: inline-block;
}

.orcamento-produto input {
  opacity: 0;
  position: absolute;
  pointer-events: none;
}

.orcamento-produto > label {
  grid-column: initial;
}

.orcamento-dados {
  border-radius: 0 5px 5px 0;
  background: var(--cor0);
}

.orcamento-conteudo {
  display: none;
}

.orcamento-conteudo h2,
.orcamento-dados h2:nth-of-type(n + 2) {
  margin-top: 20px;
}

/* Formas de utilizar o css para esconder e escolher os itens sem precisar de js */

/* Versão mais longa
#bikcraft:checked + label + input + label + #orcamento-bikcraft {
  background: blue;
} */

/* Simplificada, o til faz com que o código procure o 1ª elemento que contenha o id denominado de #orcamento-bikcraft apos a id #bikcraft, porém tem que estar no mesmo nível, uma div a mais ou a menos pode estragar o código (mesmo elemento pai) */
#bikcraft:checked ~ #orcamento-bikcraft,
#seguro:checked ~ #orcamento-seguro {
  display: grid;
  gap: 20px;
}

.orcamento-detalhes {
  display: none;
  background: var(--cor0);
  padding: 20px;
  grid-template-columns: 1fr 1fr;
  border-radius: 4px;
  align-items: center;
}

.orcamento-detalhes li {
  display: flex;
  align-items: center;
  margin-bottom: 8px;
}

.orcamento-detalhes li img {
  width: 16px;
  height: 16px;
  margin-right: 8px;
}

/* Nao da para usar a propriedade do ~ pois abaixo do .orcamento-produto input:checked existem vários outros elementos nos quais atrapalham o codigo a escolher a opcao correta, sendo necessario utilizar o + label + .orcamento-detalhes para se chegar ao elemento corretamente selecionado */
.orcamento-produto input:checked + label + .orcamento-detalhes {
  display: grid;
}

/* voltar na aula 1028 para responsivo, fazer diferente de como esta la */
